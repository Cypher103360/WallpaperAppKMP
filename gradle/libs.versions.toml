[versions]
agp = "8.5.2"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.9.3"
androidx-appcompat = "1.7.0"
androidx-constraintlayout = "2.1.4"
androidx-core-ktx = "1.13.1"
androidx-espresso-core = "3.6.1"
androidx-lifecycle = "2.8.3"
androidx-material = "1.12.0"
androidx-test-junit = "1.2.1"
compose-multiplatform = "1.7.0"
junit = "4.13.2"
kotlin = "2.0.21"
kotlinx-coroutines = "1.9.0"

# Ktor
ktor = "3.0.0"

# Coil 3 needs Ktor wasm to support image loading on the wasm platform.
#ktor = "3.0.0-wasm2"
#ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }

# local preference
datastore = "1.1.1"

# voyager for navigation
voyagerVersion = "1.1.0-beta02"

# Koin for (Dependency Injection)
koin = "4.0.0"
koinComposeMultiplatform = "4.0.0"
navigationCompose = "2.8.0-alpha10"
lifecycleViewModel = "2.8.7"

# Coil to load images
#coil3 = "3.0.0-rc02"

# room database
room = "2.7.0-alpha11"
ksp = "2.0.21-1.0.25"
sqlite = "2.5.0-SNAPSHOT"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }

#Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" } # for core functionalities
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" } #for JVM based platforms(Android, Desktop)
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" } #for native platforms (iOS, macOS)
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" } # Parse Kotlin Data classes to and from JSON
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" } # used with the above (content-negotiation)
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" } # to log the requests and debug
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" } # It is used if we have an authenticated backend

#local preference
datastore = { module = "androidx.datastore:datastore", version.ref = "datastore"}
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore"}

#Voyager
navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyagerVersion"}
screen-modal = { module = "cafe.adriel.voyager:voyager-screenmodel", version.ref = "voyagerVersion"}
voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyagerVersion"}
navigator-tabs = { module = "cafe.adriel.voyager:voyager-tab-navigator", version.ref = "voyagerVersion"}
navigator-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyagerVersion"}

# Koin (Dependency Injection)
# ViewModel support for lifecycle-aware components in Android (used with Koin for DI)
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycleViewModel" }

# Koin for Android dependency injection (used to manage dependencies in the Android app)
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }

# Koin AndroidX Compose integration (for using Koin with Jetpack Compose in Android)
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }

# Koin core for basic dependency injection functionality (core of Koin DI library)
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }

# Koin Compose integration for Multiplatform (used to inject dependencies in KMP apps using Jetpack Compose)
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinComposeMultiplatform" }

# Koin ViewModel support for Compose (provides ViewModel support in Compose with Koin DI)
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koinComposeMultiplatform" }

# Navigation Compose (used to handle navigation within Jetpack Compose apps)
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }


# room database
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-runtime-android = { module = "androidx.room:room-runtime-android", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }

# Coil to load images
#coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil3" }
#coil-compose-core = { module = "io.coil-kt.coil3:coil-compose-core", version.ref = "coil3" }
#coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor", version.ref = "coil3" }
#coil-mp = { module = "io.coil-kt.coil3:coil", version.ref = "coil3" }


[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
# Kotlin serialization
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
# Room database
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
room = { id = "androidx.room", version.ref = "room" }

[bundles]
ktor = [
    "ktor-client-core",
    "ktor-client-content-negotiation",
    "ktor-client-auth",
    "ktor-client-logging",
    "ktor-serialization-kotlinx-json",
]